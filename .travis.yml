#
#

language: csharp

os:
  - linux
  - osx

dist: trusty
sudo: required
osx_image: xcode9.1

env:
  global:
    - DOTNET_SKIP_FIRST_TIME_EXPERIENCE=1
    - DOTNET_CLI_TELEMETRY_OPTOUT=1

solution: DjvuNet.sln

mono: none
dotnet: 2.1.403

before_install:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install mono-libgdiplus; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-get -qq update; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-get install -y zip unzip; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-get install -y libgdiplus; fi

install:


script:
    - git clone --depth 1 https://github.com/DjvuNet/DjVuLibre.git DjVuLibre
    - curl -L -o artifacts.zip -s https://github.com/DjvuNet/artifacts/releases/download/v0.7.0.12/artifacts.zip
    - unzip -q artifacts.zip -d artifacts
    - curl -L -o Tools.zip -s https://github.com/DjvuNet/artifacts/releases/download/v0.7.0.12/Tools.zip
    - unzip -q Tools.zip -d Tools
    - curl -L -o deps.zip -s https://github.com/DjvuNet/artifacts/releases/download/v0.7.0.12/deps.zip
    - unzip -q deps.zip -d deps
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then dotnet restore -r linux-x64 DjvuNet.sln; fi
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then dotnet restore -r osx-x64 DjvuNet.sln; fi
    - cd DjvuNet
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then dotnet msbuild -m -nologo -p:Configuration=Debug -p:Platform=x64 -p:RuntimeIdentifier=linux-x64 -p:TargetFramework=netcoreapp3.0 -t:Publish; fi
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then dotnet msbuild -m -nologo -p:Configuration=Release -p:Platform=x64 -p:RuntimeIdentifier=linux-x64 -p:TargetFramework=netcoreapp3.0 -t:Publish; fi
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then dotnet msbuild -m -nologo -p:Configuration=Debug -p:Platform=x64 -p:RuntimeIdentifier=osx-x64 -p:TargetFramework=netcoreapp3.0 -t:Publish; fi
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then dotnet msbuild -m -nologo -p:Configuration=Release -p:Platform=x64 -p:RuntimeIdentifier=osx-x64 -p:TargetFramework=netcoreapp3.0 -t:Publish; fi
    - cd ..
    - cd DjvuNet.Tests
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then dotnet msbuild -m -nologo -p:Configuration=Debug -p:Platform=x64 -p:RuntimeIdentifier=linux-x64 -p:TargetFramework=netcoreapp3.0 -t:Publish; fi
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then dotnet ~/.nuget/packages/xunit.runner.console/2.4.0/tools/netcoreapp2.0/xunit.console.dll ../build/bin/Unix.x64.Debug/binaries/netcoreapp3.0/netcoreapp3.0/linux-x64/publish/DjvuNet.Tests.dll -nologo -parallel none -notrait Category=SkipNetCoreApp; fi
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then dotnet msbuild -m -nologo -p:Configuration=Debug -p:Platform=x64 -p:RuntimeIdentifier=osx-x64 -p:TargetFramework=netcoreapp3.0 -t:Publish; fi
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then dotnet ~/.nuget/packages/xunit.runner.console/2.4.0/tools/netcoreapp2.0/xunit.console.dll ../build/bin/Unix.x64.Debug/binaries/netcoreapp3.0/netcoreapp3.0/osx-x64/publish/DjvuNet.Tests.dll -nologo -parallel none -notrait Category=SkipNetCoreApp; fi
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then dotnet msbuild -m -nologo -p:Configuration=Release -p:Platform=x64 -p:RuntimeIdentifier=linux-x64 -p:TargetFramework=netcoreapp3.0 -t:Publish; fi
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then dotnet ~/.nuget/packages/xunit.runner.console/2.4.0/tools/netcoreapp2.0/xunit.console.dll ../build/bin/Unix.x64.Release/binaries/netcoreapp3.0/netcoreapp3.0/linux-x64/publish/DjvuNet.Tests.dll -nologo -parallel none -notrait Category=SkipNetCoreApp; fi
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then dotnet msbuild -m -nologo -p:Configuration=Release -p:Platform=x64 -p:RuntimeIdentifier=osx-x64 -p:TargetFramework=netcoreapp3.0 -t:Publish; fi
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then dotnet ~/.nuget/packages/xunit.runner.console/2.4.0/tools/netcoreapp2.0/xunit.console.dll ../build/bin/Unix.x64.Release/binaries/netcoreapp3.0/netcoreapp3.0/osx-x64/publish/DjvuNet.Tests.dll -nologo -parallel none -notrait Category=SkipNetCoreApp; fi
    - cd ..
    - cd DjvuNet.Wavelet.Tests
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then dotnet msbuild -m -nologo -p:Configuration=Debug -p:Platform=x64 -p:RuntimeIdentifier=linux-x64 -p:TargetFramework=netcoreapp3.0 -t:Publish; fi
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then dotnet ~/.nuget/packages/xunit.runner.console/2.4.0/tools/netcoreapp2.0/xunit.console.dll ../build/bin/Unix.x64.Debug/binaries/netcoreapp3.0/netcoreapp3.0/linux-x64/publish/DjvuNet.Wavelet.Tests.dll -nologo -parallel none -notrait Category=SkipNetCoreApp; fi
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then dotnet msbuild -m -nologo -p:Configuration=Debug -p:Platform=x64 -p:RuntimeIdentifier=osx-x64 -p:TargetFramework=netcoreapp3.0 -t:Publish; fi
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then dotnet ~/.nuget/packages/xunit.runner.console/2.4.0/tools/netcoreapp2.0/xunit.console.dll ../build/bin/Unix.x64.Debug/binaries/netcoreapp3.0/netcoreapp3.0/osx-x64/publish/DjvuNet.Wavelet.Tests.dll -nologo -parallel none -notrait Category=SkipNetCoreApp; fi
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then dotnet msbuild -m -nologo -p:Configuration=Release -p:Platform=x64 -p:RuntimeIdentifier=linux-x64 -p:TargetFramework=netcoreapp3.0 -t:Publish; fi
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then dotnet ~/.nuget/packages/xunit.runner.console/2.4.0/tools/netcoreapp2.0/xunit.console.dll ../build/bin/Unix.x64.Release/binaries/netcoreapp3.0/netcoreapp3.0/linux-x64/publish/DjvuNet.Wavelet.Tests.dll -nologo -parallel none -notrait Category=SkipNetCoreApp; fi
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then dotnet msbuild -m -nologo -p:Configuration=Release -p:Platform=x64 -p:RuntimeIdentifier=osx-x64 -p:TargetFramework=netcoreapp3.0 -t:Publish; fi
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then dotnet ~/.nuget/packages/xunit.runner.console/2.4.0/tools/netcoreapp2.0/xunit.console.dll ../build/bin/Unix.x64.Release/binaries/netcoreapp3.0/netcoreapp3.0/osx-x64/publish/DjvuNet.Wavelet.Tests.dll -nologo -parallel none -notrait Category=SkipNetCoreApp; fi
