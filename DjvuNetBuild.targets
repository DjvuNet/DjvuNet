<Project>

  <PropertyGroup>
    <IntermediateOutputPath>$(MSBuildThisFileDirectory)/build/bin/$(OS).$(Platform).$(Configuration)/obj/$(AssemblyName)/</IntermediateOutputPath>
    <DefineConstants Condition="$(APPVEYOR) == 'True'">_APPVEYOR;$(DefineConstans)</DefineConstants>
    <GitTasksAssembly Condition="$(GitTasksAssembly) == '' And '$(MSBuildRuntimeType)' == 'Core'">$(MSBuildThisFileDirectory)Tools/DjvuNet/$(DotNetCoreFrameworkVersion)/DjvuNet.Git.Tasks.dll</GitTasksAssembly>
    <GitTasksAssembly Condition="$(GitTasksAssembly) == '' And '$(MSBuildRuntimeType)' != 'Core'">$(MSBuildThisFileDirectory)Tools/DjvuNet/$(NetFXTargetFrameworkVersion)/DjvuNet.Git.Tasks.dll</GitTasksAssembly>
  </PropertyGroup>

  <PropertyGroup>
    <OutDir>$(MSBuildThisFileDirectory)/build/bin/$(OS).$(Platform).$(Configuration)/binaries/$(TargetFramework)/</OutDir>
    <OutputPath>$(OutDir)</OutputPath>
  </PropertyGroup>

  <UsingTask TaskName="BuildMajorVersion" AssemblyFile="$(GitTasksAssembly)"/>
  <UsingTask TaskName="GetLastCommit" AssemblyFile="$(GitTasksAssembly)"/>
  <UsingTask TaskName="GetDateTime" AssemblyFile="$(GitTasksAssembly)"/>
  <UsingTask TaskName="FileUpdate" AssemblyFile="$(GitTasksAssembly)"/>

  <Target Name="CalculateVersion" BeforeTargets="InjectVersion">
    <ReadLinesFromFile File="$(MSBuildThisFileDirectory)library.version">
      <Output TaskParameter="Lines" PropertyName="LibraryVersion" />
    </ReadLinesFromFile>

    <GetLastCommit Condition="Exists('$(MSBuildThisFileDirectory).git/HEAD')" RepoRoot="$(MSBuildThisFileDirectory)">
      <Output TaskParameter="CommitHash" PropertyName="CommitVersion" />
      <Output TaskParameter="BranchName" PropertyName="BuildBranch" />
    </GetLastCommit>

    <GetDateTime Format="yyyy-MM-ddTHH:mm:ssZ">
      <Output TaskParameter="Year" PropertyName="BYear" />
      <Output TaskParameter="Month" PropertyName="BMonth" />
      <Output TaskParameter="Day" PropertyName="BDay" />
      <Output TaskParameter="Hour" PropertyName="BHour" />
      <Output TaskParameter="Minute" PropertyName="BMinute" />
      <Output TaskParameter="Second" PropertyName="BSecond" />
    </GetDateTime>

    <BuildMajorVersion MajorMinorVersion="$(LibraryVersion)">
      <Output TaskParameter="Version" PropertyName="FullBuildVersion" />
    </BuildMajorVersion>

    <PropertyGroup Condition="$(DjvuAssemblyVersion) == ''">
      <IndexOfLastVersionDot>$(FullBuildVersion.LastIndexOf('.'))</IndexOfLastVersionDot>
      <DjvuAssemblyVersion>$(FullBuildVersion.Substring(0, $(IndexOfLastVersionDot)))</DjvuAssemblyVersion>
    </PropertyGroup>
  </Target>

  <Target Name="InjectVersion" BeforeTargets="CoreCompile" DependsOnTargets="CalculateVersion">

    <PropertyGroup>
      <UtilRepoRootUpdate>$(ProjectName.EndsWith(`.Tests`))</UtilRepoRootUpdate>
      <UtilTestFile>$(ProjectDir)..\DjvuNet.Shared.Tests\UtilRoot.cs</UtilTestFile>
    </PropertyGroup>

    <Message Importance="High"
             Text="Building [$(TargetName)] target framework: [$(TargetFramework)], assembly version: [$(DjvuAssemblyVersion)], file version: [$(FullBuildVersion)], configuration: [$(Configuration)], platform [$(Platform)], branch: [$(BuildBranch)] commit: [$(CommitVersion)]"/>

    <Copy Condition="$(TargetFramework) == 'net472'" SourceFiles="$(ProjectDir)Properties/AssemblyInfo.Template.cs"
          DestinationFiles="$(ProjectDir)Properties/AssemblyInfo.cs"/>
    <Copy Condition="$(TargetFramework) == 'net472'" SourceFiles="$(MSBuildThisFileDirectory)Templates/AssemblyInfoCommon.Template.cs"
          DestinationFiles="$(ProjectDir)Properties/AssemblyInfoCommon.cs"/>

    <Copy Condition="$(TargetFramework) != 'net472'" SourceFiles="$(ProjectDir)Properties/AssemblyInfo.Template.cs"
      DestinationFiles="$(ProjectDir)Properties/AssemblyInfo.$(TargetFramework).cs"/>
    <Copy Condition="$(TargetFramework) != 'net472'" SourceFiles="$(MSBuildThisFileDirectory)Templates/AssemblyInfoCommon.Template.cs"
          DestinationFiles="$(ProjectDir)Properties/AssemblyInfoCommon.$(TargetFramework).cs"/>

    <Copy SourceFiles="$(MSBuildThisFileDirectory)Templates/UtilRoot.Template.cs" Condition="$(UtilRepoRootUpdate) == true"
          DestinationFiles="$(ProjectDir)../DjvuNet.Shared.Tests/UtilRoot.cs"/>

    <ItemGroup Condition="$(TargetFramework) == 'net472'">
      <WriteFiles Include='$(ProjectDir)Properties/AssemblyInfo.cs' />
      <WriteFiles Include='$(ProjectDir)Properties/AssemblyInfoCommon.cs' />
    </ItemGroup>

    <ItemGroup Condition="$(TargetFramework) != 'net472'">
      <WriteFiles Include='$(ProjectDir)Properties/AssemblyInfo.$(TargetFramework).cs' />
      <WriteFiles Include='$(ProjectDir)Properties/AssemblyInfoCommon.$(TargetFramework).cs' />
    </ItemGroup>

    <ItemGroup>
      <UtilFiles Include='$(UtilTestFile)' Condition="$(UtilRepoRootUpdate) == true" />
    </ItemGroup>

    <FileUpdate Files="@(WriteFiles)" Regex="__LIBRARY_VERSION__" ReplacementText="$(DjvuAssemblyVersion)"/>
    <FileUpdate Files="@(WriteFiles)" Regex="__LIBRARY_FULL_VERSION__" ReplacementText="$(FullBuildVersion)"/>
    <FileUpdate Files="@(WriteFiles)" Regex="__LIBRARY_CONFIGURATION__" ReplacementText="$(Configuration)"/>
    <FileUpdate Files="@(WriteFiles)" Regex="__LIBRARY_PLATFORM__" ReplacementText="$(Platform)"/>
    <FileUpdate Files="@(WriteFiles)" Regex="__LIBRARY_BYEAR__" ReplacementText="$(BYear)" />
    <FileUpdate Files="@(WriteFiles)" Regex="__LIBRARY_REPO_BRANCH__" ReplacementText="$(BuildBranch)" />
    <FileUpdate Files="@(WriteFiles)" Regex="__LIBRARY_COMMIT__" ReplacementText="$(CommitVersion)"/>

    <FileUpdate Files="@(WriteFiles)" Regex="// TEMPLATE:.+"
    ReplacementText="// THIS FILE IS AUTOMATICALLY GENERATED DURING BUILD!&#10;// Apply any changes intended to appear in AssemblyInso.cs to 'AssemblyInfo.Template.cs' template,&#10;// in the case of AssemblyInfoCommon.cs file apply changes to AssemblyInfoCommon.Template.cs file in root folder instead."/>

    <FileUpdate Condition="$(UtilRepoRootUpdate) == true" Files="@(UtilFiles)" Regex="@@@DJVUNET_ROOT@@@" ReplacementText="$(MSBuildThisFileDirectory)"/>

    <FileUpdate Files="@(UtilFiles)" Regex="// TEMPLATE:.+" Condition="$(UtilRepoRootUpdate) == true"
    ReplacementText="// THIS FILE IS AUTOMATICALLY GENERATED DURING BUILD!&#10;// Apply any changes intended to appear in UtilRoot.cs to 'UtilRoot.Template.cs' template, instead."/>

  </Target>

  <Target Name="InjectPackageVersion" BeforeTargets="Pack" DependsOnTargets="CalculateVersion">
    <PropertyGroup>
      <PackageVersion>$(FullBuildVersion)</PackageVersion>
    </PropertyGroup>
    <Message Importance="High"
             Text="Packaging [$(PackageId)] target frameworks: [@(_TargetFrameworks)], assembly version: [$(DjvuAssemblyVersion)], version: [$(FullBuildVersion)], configuration: [$(Configuration)], platform [$(Platform)], commit: [$(CommitVersion)]"/>
  </Target>

  <Target Name="PrepareCopyXUnitTestProduct"
      AfterTargets="GeneratePublishRuntimeConfigurationFile"
      BeforeTargets="CopyXUnitTestProduct">

    <PropertyGroup>
      <CopyPublishXUnitPackages Condition="$(IsDjvuNetTestProject) == 'true'">true</CopyPublishXUnitPackages>
    </PropertyGroup>

    <ItemGroup>
      <PackageReferenceFiles
        Condition="%(PackageReference.CopyToOutputDirectory) != ''"
        Include="$(NugetPackageRoot)\%(PackageReference.Identity)\%(PackageReference.Version)\%(PackageReference.CopyToOutputDirectory)" />
    </ItemGroup>

    <Message Condition="$(CopyPublishXUnitPackages) == 'true'" Text="Target CopyXUnitTestProduct CopyPublishXUnitPackages: %(PackageReferenceFiles.Identity)" Importance="High" />
  </Target>

  <Target
    Name="CopyXUnitTestProduct"
    AfterTargets="PrepareCopyXUnitTestProduct"
    BeforeTargets="_PublishBuildAlternative"
    Condition="$(CopyPublishXUnitPackages) == 'true'">

    <Copy SourceFiles="@(PackageReferenceFiles)" DestinationFolder="$(PublishDir)" SkipUnchangedFiles="true" ContinueOnError="false" />

  </Target>

</Project>
